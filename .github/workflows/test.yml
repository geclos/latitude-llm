name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: latitude_test
          POSTGRES_PASSWORD: secret
          POSTGRES_USER: latitude
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2 # Checkout HEAD^

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Use Turbo to build affected packages
        run: pnpm turbo build --cache-dir=.turbo --filter="./packages/*"

      - name: Wait for PostgreSQL to start
        run: until pg_isready -h localhost -p 5432; do sleep 1; done

      - name: Run Server migrations
        env:
          NODE_ENV: test
          DATABASE_URL: postgres://latitude:secret@localhost:5432/latitude_test
        run: cd packages/core && pnpm db:migrate:test

      - name: Test
        env:
          NODE_ENV: test
        run: pnpm test --filter=[HEAD^1]
