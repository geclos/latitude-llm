services:
  db:
    image: postgres:15.8
    environment:
      - 'POSTGRES_USER=latitude'
      - 'POSTGRES_PASSWORD=secret'
    ports:
      - '5432:5432'
    volumes:
      - ./docker/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - ./docker/pgdata:/var/lib/postgresql/data

  redis:
    image: redis
    ports:
      - '6379:6379'

  mailpit:
    image: axllent/mailpit
    ports:
      - 8025:8025
      - 1025:1025

  web:
    build:
      context: .
      dockerfile: apps/web/docker/Dockerfile
      args:
        - BUILDING_CONTAINER=true
        - NODE_ENV=production
        - SENTRY_ORG=latitude-i5
        - SENTRY_PROJECT=latitude-app-llm
        - SENTRY_DSN=http://sentrymock.com
        - NEXT_PUBLIC_POSTHOG_KEY=eu.posthog.com
        - NEXT_PUBLIC_POSTHOG_HOST=test
    profiles: [building]
    environment:
      - NODE_ENV=production
      - PORT=8080
      - HOSTNAME=0.0.0.0
    depends_on:
      - db
      - redis

  gateway:
    build:
      context: .
      dockerfile: apps/gateway/docker/Dockerfile
    profiles: [building]
    environment:
      - CACHE_HOST=redis
      - DATABASE_URL=postgresql://latitude:secret@db:5432/latitude
      - DEFAULT_PROJECT_ID=1
      - DEFAULT_PROVIDER_API_KEY=test
      - FROM_MAILER_EMAIL=jon@winterfell.com
      - LATITUDE_DOMAIN=web
      - LATITUDE_URL=http://web:8080
      - NODE_ENV=production
      - QUEUE_HOST=redis
      - WEBSOCKETS_SERVER=websockets
      - WEBSOCKET_REFRESH_SECRET_TOKEN_KEY=test
      - WEBSOCKET_SECRET_TOKEN_KEY=test
      - WORKERS_WEBSOCKET_SECRET_TOKEN=test
      - HOSTNAME=localhost
    depends_on:
      - db
      - redis

  workers:
    build:
      context: .
      dockerfile: apps/workers/docker/Dockerfile
    profiles: [building]
    environment:
      - CACHE_HOST=redis
      - DATABASE_URL=postgresql://latitude:secret@db:5432/latitude
      - DEFAULT_PROJECT_ID=1
      - DEFAULT_PROVIDER_API_KEY=test
      - FROM_MAILER_EMAIL=jon@winterfell.com
      - LATITUDE_DOMAIN=web
      - LATITUDE_URL=http://web:8080
      - NODE_ENV=production
      - QUEUE_HOST=redis
      - WEBSOCKETS_SERVER=websockets
      - WEBSOCKET_REFRESH_SECRET_TOKEN_KEY=test
      - WEBSOCKET_SECRET_TOKEN_KEY=test
      - WORKERS_WEBSOCKET_SECRET_TOKEN=test
    depends_on:
      - db
      - redis

  core:
    build:
      context: .
      dockerfile: packages/core/docker/Dockerfile
    profiles: [building]
    environment:
      - NODE_ENV=production
    depends_on:
      - db
